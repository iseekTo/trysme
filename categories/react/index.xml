<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on wm&#39;s blog</title>
    <link>https://iseekto.github.io/trysme/categories/react/</link>
    <description>Recent content in react on wm&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Apr 2020 21:40:44 +0800</lastBuildDate>
    
	<atom:link href="https://iseekto.github.io/trysme/categories/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在React中更好的集成TypeScript</title>
      <link>https://iseekto.github.io/trysme/2020/%E5%9C%A8react%E4%B8%AD%E6%9B%B4%E5%A5%BD%E7%9A%84%E9%9B%86%E6%88%90typescript/</link>
      <pubDate>Sat, 25 Apr 2020 21:40:44 +0800</pubDate>
      
      <guid>https://iseekto.github.io/trysme/2020/%E5%9C%A8react%E4%B8%AD%E6%9B%B4%E5%A5%BD%E7%9A%84%E9%9B%86%E6%88%90typescript/</guid>
      <description>定义一个公共类组件的 props 和 state类型
import React, { Component, ComponentProps } from &#39;react&#39; type IProps = { initalNum: number } type IState = { username: string | null } class GlobalType extends Component&amp;lt;IProps, IState&amp;gt; { static defaultProps = { initalNum: 0 } }   在React中使用TS需要注意的几点：
1. .jsx文件都需要变为 .tsx
2. 使用class组件时必须要写 props和state的类型声明(以此代替了propTypes)
3. 需要定义全局变量时，在根目录的 global.d.ts 里写，使用时无需引入
4. 接口，其他类型声明在types/**.ts里写，统一规范化
class组件类型  React.ComponentProps: 获取指定组件的props类型
 type getGlobalTypesForProps = ComponentProps&amp;lt;typeof GlobalType&amp;gt;
  React.</description>
    </item>
    
    <item>
      <title>Ts React</title>
      <link>https://iseekto.github.io/trysme/2020/ts-react/</link>
      <pubDate>Fri, 24 Apr 2020 16:54:22 +0800</pubDate>
      
      <guid>https://iseekto.github.io/trysme/2020/ts-react/</guid>
      <description>注释写好，同事烧香；不写注释，当场去世
 withRouter类型集成 // 引入函数及类型 import { withRouter, RouteComponentProps } from &#39;react-router&#39; // 定义组件内的props类型 type IEmptyCommanyProps = Readonly&amp;lt;{ onClick: () =&amp;gt; void }&amp;gt; &amp;amp; RouteComponentProps // 如果不需要props 但组件报错 type Iprops = {} &amp;amp; RouteComponentProps // 然后就可以愉快的跳转了~ [转圈]  axios集成返回体 import axios, { AxiosResponse, AxiosRequestConfig } from &#39;axios&#39; // 我这里后端返回的字段都有一个 message 所以我把它加上去！🥶 interface ReWriteAxiosResponseType extends AxiosResponse { message?: string } // 定义一个通用请求 🔥 const request(options: AxiosRequestConfig): Promise&amp;lt;ReWriteAxiosResponseType&amp;gt; { return axios.</description>
    </item>
    
    <item>
      <title>Create React App运行报错解决方案</title>
      <link>https://iseekto.github.io/trysme/2020/create-react-app%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Mon, 27 Jan 2020 20:28:16 +0800</pubDate>
      
      <guid>https://iseekto.github.io/trysme/2020/create-react-app%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>排除webpack，以及相关依赖包/版本的错误
 根目录下创建一个 .env 文件
添加 SKIP_PREFLIGHT_CHECK=true
运行 npm start
 其他错误 错误日志：The engine &amp;ldquo;node&amp;rdquo; is incompatible with this module
 解决方案：yarn config set ignore-engines true</description>
    </item>
    
  </channel>
</rss>