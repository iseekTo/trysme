<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>node on wm&#39;s blog</title>
    <link>https://iseekto.github.io/trysme/tags/node/</link>
    <description>Recent content in node on wm&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Feb 2020 11:25:01 +0800</lastBuildDate>
    
	<atom:link href="https://iseekto.github.io/trysme/tags/node/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pm2使用</title>
      <link>https://iseekto.github.io/trysme/2020/pm2%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 28 Feb 2020 11:25:01 +0800</pubDate>
      
      <guid>https://iseekto.github.io/trysme/2020/pm2%E4%BD%BF%E7%94%A8/</guid>
      <description>安装: npm i pm2 -g
查看版本：pm2 --version
启动：pm2 start index.js 监听文件启动：pm2 start index.js --watch
查看启动历史：pm2 list
停止：pm2 stop &amp;lt;AppName&amp;gt;/&amp;lt;id&amp;gt;
全部停止： pm2 stop all
删除进程：pm2 delete &amp;lt;id&amp;gt;
 pm2 常用配置
 根目录下，新建空文件 /logs/err.log 和 /logs/out.log 新建配置文件 pm2.conf.json
// pm2.conf.json： { &amp;quot;apps&amp;quot;: { &amp;quot;name&amp;quot;: &amp;quot;pm2-test-server&amp;quot;, // 起个进程名，即AppName &amp;quot;script&amp;quot;: &amp;quot;index.js&amp;quot;, // 启动的入口文件（koa2项目中为/bin/www.js） &amp;quot;watch&amp;quot;: true, // 监听文件变化，自动重启 &amp;quot;ignore_watch&amp;quot;: [ // 不需要监听的文件 &amp;quot;node_modules&amp;quot;, &amp;quot;logs&amp;quot; ], &amp;quot;instances&amp;quot;: 4, // 设置多进程 &amp;quot;error_file&amp;quot;: &amp;quot;logs/err.log&amp;quot;, // 错误日志存储的文件 &amp;quot;out_file&amp;quot;: &amp;quot;logs/out.log&amp;quot;, // console.</description>
    </item>
    
    <item>
      <title>Mongodb相关问题</title>
      <link>https://iseekto.github.io/trysme/2020/mongodb%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 25 Feb 2020 17:06:47 +0800</pubDate>
      
      <guid>https://iseekto.github.io/trysme/2020/mongodb%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
      <description>此处不讲本地mongodb的连接, 主环境在宝塔面板中进行
 基本步骤 1、点击ssh终端进行命令行交互
2、输入 mongo
3、切换 admin 数据库，输入：use admin
4、 给 admin 设置密码
添加用户密码 db.createUser({ user: &amp;quot;自定义名&amp;quot;, // db,getUsers(user) pwd: &amp;quot;密码&amp;quot;, roles:[ { role: &amp;quot;userAdmin&amp;quot;, // 权限 db: &amp;quot;数据库名字&amp;quot; // 要对应 数据库列表中的某一个，查看数据库列表 show dbs } ] })  5、验证是否添加成功，db.auth(用户名，用户密码)，如果返回 ‘1’表示验证成功， 如果是 ‘0’ 表示验证失败
刚才是给 admin 添加的权限，现在可以给别的数据库加
 宝塔mongodb配置修改  bindIp 修改为 0.0.0.0 允许外网访问 authorization 修改为 enabled 开启认证   createUser中的 role 字段解释  MongoDB 目前内置了 7 个角色。  数据库用户角色：read、readWrite; 数据库管理角色：dbAdmin、dbOwner、userAdmin； 集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager； 备份恢复角色：backup、restore； 所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase 超级用户角色：root；这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase） 内部角色：__system  这些角色对应的作用如下：  Read：允许用户读取指定数据库 readWrite：允许用户读写指定数据库 dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.</description>
    </item>
    
    <item>
      <title>Node资源</title>
      <link>https://iseekto.github.io/trysme/2020/node%E8%B5%84%E6%BA%90/</link>
      <pubDate>Mon, 27 Jan 2020 20:34:10 +0800</pubDate>
      
      <guid>https://iseekto.github.io/trysme/2020/node%E8%B5%84%E6%BA%90/</guid>
      <description>nodejs不同版本的下载
 mac系统的同学建议下载相关版本的 msi
 </description>
    </item>
    
  </channel>
</rss>