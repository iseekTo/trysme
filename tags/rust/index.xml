<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on wm&#39;s blog</title>
    <link>https://iseekto.github.io/trysme/tags/rust/</link>
    <description>Recent content in rust on wm&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Mar 2020 16:31:31 +0800</lastBuildDate>
    
	<atom:link href="https://iseekto.github.io/trysme/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust_常见命令</title>
      <link>https://iseekto.github.io/trysme/2020/rust_1/</link>
      <pubDate>Sat, 14 Mar 2020 16:31:31 +0800</pubDate>
      
      <guid>https://iseekto.github.io/trysme/2020/rust_1/</guid>
      <description> 项目常用命令 1、创建项目
cargo new 项目名 cargo new --lib 创建用于编写库的项目   源文件尽量放在src目录中 rustc xxx.rs 可直接运行文件
 2、打包项目
cargo build: 打包一个目录及可执行文件 cargo run: 运行全部可执行文件（如果没有更改，则命令只运行二进制文件，反之则重新构建然后再运行） cargo check: 此命令快速检查您的代码，以确保其可编译，但不会产生可执行文件 （check比build快），因为它跳过了生成可执行文件的步骤 cargo doc --open: 生成本地构建所有依赖项提供的文档并自动在浏览器打开。  3、发布项目
使用 cargo build --release 优化对其进行编译，此命令将在 target / release 中创建一个可执行文件
 cargo build &amp;ndash;release 比 debug 模式下速度要快的多的多。
 </description>
    </item>
    
  </channel>
</rss>